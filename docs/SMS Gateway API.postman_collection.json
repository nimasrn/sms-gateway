{
	"info": {
		"_postman_id": "fe0389b5-f907-4f97-a8ec-878b593c5887",
		"name": "SMS Gateway API",
		"description": "Postman collection for health and messages endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12406035"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "GET /health",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status is 200', function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"pm.test('Body is success', function () {",
									"  pm.expect(pm.response.text()).to.eql('success');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "POST /messages (Create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 201', function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"let jsonData;",
									"try { jsonData = pm.response.json(); } catch(e) { jsonData = null; }",
									"pm.test('Response has id', function () {",
									"  pm.expect(jsonData && jsonData.id).to.exist;",
									"});",
									"// Save id for subsequent requests",
									"if (jsonData && jsonData.id) {",
									"  pm.collectionVariables.set('message_id', String(jsonData.id));",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer_id\": 1,\n  \"mobile\": \"+4915123456789\",\n  \"content\": \"Hello from Postman\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /messages/express (Create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 201', function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"let jsonData;",
									"try { jsonData = pm.response.json(); } catch(e) { jsonData = null; }",
									"pm.test('Response has id', function () {",
									"  pm.expect(jsonData && jsonData.id).to.exist;",
									"});",
									"// Save id for subsequent requests",
									"if (jsonData && jsonData.id) {",
									"  pm.collectionVariables.set('message_id', String(jsonData.id));",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-API-Key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer_id\": 1,\n  \"mobile\": \"+4915123456789\",\n  \"content\": \"Hello from Postman\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/messages/express",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"messages",
								"express"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /messages (List)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 200', function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"let body;",
									"try { body = pm.response.json(); } catch(e) { body = null; }",
									"pm.test('Has items array', function () {",
									"  pm.expect(body && Array.isArray(body.items)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/messages?customer_id=1&status=queued,delivered&order=desc&limit=1000&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"messages"
							],
							"query": [
								{
									"key": "customer_id",
									"value": "1"
								},
								{
									"key": "status",
									"value": "queued,delivered"
								},
								{
									"key": "order",
									"value": "desc"
								},
								{
									"key": "limit",
									"value": "1000"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /messages/delivery-reports(List)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 200', function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"let body;",
									"try { body = pm.response.json(); } catch(e) { body = null; }",
									"pm.test('Has items array', function () {",
									"  pm.expect(body && Array.isArray(body.items)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/messages/delivery-reports?customer_id=1&order=desc&limit=1000&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"messages",
								"delivery-reports"
							],
							"query": [
								{
									"key": "customer_id",
									"value": "1"
								},
								{
									"key": "status",
									"value": "delivered",
									"disabled": true
								},
								{
									"key": "order",
									"value": "desc"
								},
								{
									"key": "limit",
									"value": "1000"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /messages/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status is 200', function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"let m;",
									"try { m = pm.response.json(); } catch(e) { m = null; }",
									"pm.test('ID matches variable', function () {",
									"  pm.expect(m && String(m.id)).to.eql(pm.collectionVariables.get('message_id'));",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/messages/{{message_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"messages",
								"{{message_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metrics",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-API-Key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"customer_id\": 1,\n  \"mobile\": \"+4915123456789\",\n  \"content\": \"Hello from Postman\"\n}"
				},
				"url": {
					"raw": "{{metrics_url}}/metrics",
					"host": [
						"{{metrics_url}}"
					],
					"path": [
						"metrics"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		},
		{
			"key": "api_key",
			"value": ""
		},
		{
			"key": "message_id",
			"value": "1"
		}
	]
}